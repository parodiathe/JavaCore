8. Нити и байты

Читайте с консоли имена файлов, пока не будет введено слово "exit"
Передайте имя файла в нить ReadThread
Нить ReadThread должна найти байт, который встречается в файле максимальное число раз, и добавить его в словарь resultMap,
где параметр String - это имя файла, параметр Integer - это искомый байт.
Закрыть потоки. Не использовать try-with-resources

---------------------------------------------------------------------------------------------------------------------------------------------

import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Solution {
    static Map<String, Integer> resultMap = new HashMap<>();

    public static void main(String[] args) {
        Scanner keyboard = new Scanner(System.in);
        while (true) {
            String filename = keyboard.nextLine();

            if (filename.equals("exit")) {
                break;
            }
            ReadThread readThread = new ReadThread(filename);
            readThread.start();
        }

        System.out.println(resultMap);
    }

    public static class ReadThread extends Thread {
        private String filename;

        public ReadThread(String filename) {
            this.filename = filename;
        }

        @Override
        public void run() {
            try {
                FileReader fileReader = new FileReader(filename);
                Map<Integer, Integer> ASCII = new HashMap<>();

                while (fileReader.ready()) {
                    int charCode = fileReader.read();
                    ASCII.put(charCode, ASCII.getOrDefault(charCode, 0) + 1);
                }

                int maxByte = 0;
                int maxCount = 0;

                for (Map.Entry<Integer, Integer> entry : ASCII.entrySet()) {
                    int charCode = entry.getKey();
                    int count = entry.getValue();

                    if (count > maxCount) {
                        maxByte = charCode;
                        maxCount = count;
                    }
                }
                resultMap.put(filename, maxByte);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
